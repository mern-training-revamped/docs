"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4279],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),u=a,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7353:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Create NodeJs project",c={unversionedId:"Intro to Lambdas/create-a-nodejs-project",id:"Intro to Lambdas/create-a-nodejs-project",title:"Create NodeJs project",description:"this command will create a file called package.json, Replace the contents of the file with following content",source:"@site/docs/Intro to Lambdas/create-a-nodejs-project.md",sourceDirName:"Intro to Lambdas",slug:"/Intro to Lambdas/create-a-nodejs-project",permalink:"/documentation/docs/Intro to Lambdas/create-a-nodejs-project",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Setup a Lambda",permalink:"/documentation/docs/Intro to Lambdas/create-a-lambda"},next:{title:"Setup Environment",permalink:"/documentation/docs/Intro to Lambdas/setup-environment"}},s={},l=[],p={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-nodejs-project"},"Create NodeJs project"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="initialize node project"',title:'"initialize',node:!0,'project"':!0},"npm init\n")),(0,a.kt)("p",null,"this command will create a file called package.json, Replace the contents of the file with following content"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "@@name of the api@@",\n  "version": "1.0.0",\n  "description": "Lambda to validate email and check for eligibility to proceed with registration",\n  "main": "index.js",\n  "scripts": {\n    "start": "sls offline start",\n    "zip": "zip -r lambda.zip . \\"*.zip\\"",\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "repository": {\n    "type": "git",\n    "url": "git+https://github.com/@@your-account@@/@@name of the api@@.git"\n  },\n  "author": "",\n  "license": "ISC",\n  "bugs": {\n    "url": "https://github.com/@@your-account@@/@@name of the api@@/issues"\n  },\n  "homepage": "https://github.com/@@your-account@@/@@name of the api@@#readme",\n  "devDependencies": {\n    "serverless": "^4.5.0",\n    "serverless-offline": "^14.4.0"\n  },\n  "dependencies": {\n    "aws-sdk": "^2.1692.0",\n    "env-var": "^7.5.0",\n    "mern-common-layer": "^1.3.0",\n    "mern-database-layer": "^5.0.0",\n    "mern-logging-layer": "^7.0.0"\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="install dependencies"',title:'"install','dependencies"':!0},"npm install\n")),(0,a.kt)("p",null,"this command will install all the dependencies of the app"))}d.isMDXComponent=!0}}]);